############### COLOURS ###############

[colours]
background		= #1A1211
background-alt	= #101010
foreground		= #EDEFF2
foreground-alt	= #A8BAB3
greycolour		= #75827D
1colour			= #324F6B
2colour			= #205E74
3colour			= #494956
4colour			= #49546A
5colour			= #606970
6colour			= #897B75

background-simple = #00edeff2

############### GLOBAL WM SETTINGS ###############
[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top value
;   Used for top aligned bars
margin-bottom = 0

; Adjust the _NET_WM_STRUT_PARTIAL bottom value
;   Used for bottom aligned bars
margin-top = 0

############### APPLICATION SETTINGS ###############

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; Time in milliseconds that the input handler will wait between processing events
throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = over
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
format-foreground =
format-background =
format-underline =
format-overline =
format-spacing =
format-padding =
format-margin =
format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = true

############### BAR DEFAULTS ###############
[bar/defaults]
; Use either of the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ polybar -m | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
; If no monitor is given, the primary monitor is used if it exists
monitor = ${env:MONITOR:}

; Require the monitor to be in connected state
; XRandR sometimes reports my monitor as being disconnected (when in use)
monitor-strict = false

; Use fuzzy matching for monitors (only ignores dashes -)
; Useful when monitors are named differently with different drivers.
monitor-exact = true

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
; Note: With this most WMs will no longer reserve space for
; the bar and it will overlap other windows. You need to configure
; your WM to add a gap where the bar will be placed.
override-redirect = false

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block.
; The center block will stay in the middle of the bar whenever
; possible. It can still be pushed around if other blocks need
; more space.
; When false, the center block is centered in the space between
; the left and right block.
fixed-center = false

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 100%
height = 18

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border
; doesn't get rounded. For this to work you may also need to enable
; pseudo-transparency or use a compositor like compton.
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 0
line-color = #f00

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size can be defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in 50% minus 10 pixels. The percentage is relative
; to the monitor width or height depending on the border direction.
border-size = 0
border-color = #f00

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 0

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 0

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = SF Pro Text:size=9;2
font-1 = JetBrainsMono Nerd Font:size=12;2
font-2 = JetBrainsMono Nerd Font:size=10;2

; The separator will be inserted between the output of each module
separator =

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
locale =

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = right

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 16

; Background color for the tray container
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
tray-background = ${colours.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
; wm-restack =

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi =
dpi-x = 0
dpi-y = 0

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = false

############################################

[bar/powerline]
inherit = bar/defaults
background = ${colours.background}
foreground = ${colours.foreground}
battery-background = ${colours.5colour}
cpu-background = ${colours.1colour}
date-background = ${colours.6colour}
memory-background = ${colours.2colour}
volume-background = ${colours.4colour}
temperature-background = ${colours.3colour}
wname-background = ${colours.background}
modules-left = startmenu 8sep ewmh 7sep xwindow
modules-center =
modules-right = 6sep cpu 5sep memory 4sep temperature 3sep pulseaudio 2sep battery 1sep date

[bar/simple]
inherit = bar/defaults
module-margin = 2
background = ${colours.background-simple}
foreground = ${colours.foreground}
tray-background = ${colours.background-simple}
battery-background = ${colours.background-simple}
cpu-background = ${colours.background-simple}
date-background = ${colours.background-simple}
memory-background = ${colours.background-simple}
volume-background = ${colours.background-simple}
temperature-background = ${colours.background-simple}
wname-background = ${colours.background-simple}
separator =
modules-left = startmenu ewmh xwindow
;modules-center =  
modules-right = cpu memory temperature pulseaudio battery date

[bar/spectrwm]
inherit = bar/powerline
override-redirect = true

############### BUILT-IN MODULES ###############
	#### BATTERY ####
[module/battery]
type = internal/battery

full-at = 100
; $ ls -l /sys/class/power_supply/
battery = BAT1
adapter = ACAD

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = 5

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = %{T3}<animation-charging>%{T-}<label-charging>
format-charging-background = ${root.battery-background}

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-discharging>
format-discharging = %{T3}<ramp-capacity>%{T-}<label-discharging>
format-discharging-background = ${root.battery-background}

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
;format-full = <ramp-capacity> <label-full>
format-full-background = ${root.battery-background}

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current charge rate in watts)
label-charging = %percentage%%

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current discharge rate in watts)
label-discharging = %percentage%%

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
label-full = %{T3} %{T-}Full

; Only applies if <ramp-capacity> is used
ramp-capacity-0	 = " "
ramp-capacity-1  = " "
ramp-capacity-2  = " "
ramp-capacity-3  = " "
ramp-capacity-4  = " "
ramp-capacity-5  = " "
ramp-capacity-6  = " "
ramp-capacity-7  = " "
ramp-capacity-8  = " "
ramp-capacity-9  = " "
ramp-capacity-10 = " "

; Only applies if <animation-charging> is used
animation-charging-0 = " "
animation-charging-1 = " "
animation-charging-2 = " "
animation-charging-3 = " "
animation-charging-4 = " "
; Framerate in milliseconds
animation-charging-framerate = 750

	#### CPU ####
[module/cpu]
type = internal/cpu

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
format = %{T3}﬙ %{T-}<label>
format-background = ${root.cpu-background}

; Available tokens:
;   %percentage% (default) - total cpu load averaged over all cores
;   %percentage-sum% - Cumulative load on all cores
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label = %percentage%%

; Seconds to sleep between updates
; Default: 1
interval = 1

	#### DATE & TIME ####
[module/date]
type = internal/date

interval = 1.0
;date = %A, %B %d
;time = %I:%M %P
date = %a %b %d
time = %I:%M %p
date-alt = %d/%m/%Y
time-alt = %T

;label = "%date% %time%  "
label = "%date%  %time%      "
label-font = 0
label-background = ${root.date-background}

	#### WORKSPACE NAME ####
[module/ewmh]
type = internal/xworkspaces

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; Create click handler used to focus desktop
; Default: true
enable-click = true

; Create scroll handlers used to cycle desktops
; Default: true
enable-scroll = true

; icon-[0-9]+ = <desktop-name>;<icon>
; NOTE: The desktop name needs to match the name configured by the WM
; You can get a list of the defined desktops using:
; $ xprop -root _NET_DESKTOP_NAMES
; Note: Neither <desktop-name> nor <icon> can contain a semicolon (;)
icon-0 = web;%{T3} %{T-}
icon-1 = dev;%{T3} %{T-}
icon-2 = sys;%{T3} %{T-}
icon-3 = doc;%{T3} %{T-}
icon-4 = chat;%{T3} %{T-}
icon-5 = game;%{T3} %{T-}
icon-6 = media;%{T3} %{T-}
icon-7 = gfx;%{T3} %{T-}
icon-default = %{T3}♟ %{T-}

; Available tags:
;   <label-monitor>
;   <label-state> - gets replaced with <label-(active|urgent|occupied|empty)>
; Default: <label-state>
format = <label-state>

; Available tokens:
;   %name%
; Default: %name%
label-monitor = %name%

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-active = %icon%%name%
label-active-foreground = ${colours.foreground}
label-active-background = ${colours.3colour}
label-active-padding = 1

; (unreleased)
; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-occupied = %icon%
label-occupied-foreground = ${colours.background}

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-urgent = %icon%
label-urgent-foreground = #000000
label-urgent-background = #bd2c40
label-urgent-underline = #9b0a20
label-urgent-padding = 4

; Available tokens:
;   %name%
;   %icon%
;   %index%
; Default: %icon%  %name%
label-empty = %icon%
label-empty-foreground = #C8CACC
label-empty-background = ${colours.greycolour}
label-empty-padding = 1

	#### MEMORY ####
[module/memory]
type = internal/memory

; Seconds to sleep between updates
; Default: 1
interval = 3

; Available tags:
;   <label> (default)
;   <bar-used>
;   <bar-free>
;   <ramp-used>
;   <ramp-free>
;   <bar-swap-used>
;   <bar-swap-free>
;   <ramp-swap-used>
;   <ramp-swap-free>
format = %{T3} %{T-}<label>
format-background = ${root.memory-background}

; Available tokens:
;   %percentage_used% (default)
;   %percentage_free%
;   %gb_used%
;   %gb_free%
;   %gb_total%
;   %mb_used%
;   %mb_free%
;   %mb_total%
;   %percentage_swap_used%
;   %percentage_swap_free%
;   %mb_swap_total%
;   %mb_swap_free%
;   %mb_swap_used%
;   %gb_swap_total%
;   %gb_swap_free%
;   %gb_swap_used%

label = %mb_used%

	#### VOLUME ####
[module/pulseaudio]
type = internal/pulseaudio

; Sink to be used, if it exists (find using `pacmd list-sinks`, name field)
; If not, uses default sink
; sink = alsa_output.pci-0000_12_00.3.analog-stereo

; Use PA_VOLUME_UI_MAX (~153%) if true, or PA_VOLUME_NORM (100%) if false
; Default: true
use-ui-max = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = 5

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = %{T3}<ramp-volume>%{T-}<label-volume>
format-volume-background = ${root.volume-background}

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
;format-muted = <label-muted>
format-muted-background = ${root.volume-background}

; Available tokens:
;   %percentage% (default)
;   %decibels% (unreleased)
;label-volume = %percentage%%

; Available tokens:
;   %percentage% (default)
;   %decibels% (unreleased)
label-muted = %{T3}婢 %{T-}OFF

; Only applies if <ramp-volume> is used
ramp-volume-0 = "奄 "
ramp-volume-1 = "奔 "
ramp-volume-2 = "墳 "

#### TEMPERATURE ####
[module/temperature]
type = internal/temperature

; Seconds to sleep between updates
; Default: 1
interval = 0.5

; Thermal zone to use
; To list all the zone types, run
; $ for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
; Default: 0
thermal-zone = 0

; Full path of temperature sysfs path
; Use `sensors` to find preferred temperature source, then run
; $ for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
; to find path to desired file
; Default reverts to thermal zone setting
hwmon-path = /sys/devices/pci0000:00/0000:00:08.1/0000:03:00.0/hwmon/hwmon2/temp1_input

; Base temperature for where to start the ramp (in degrees celsius)
; Default: 0
base-temperature = 32

; Threshold temperature to display warning label (in degrees celsius)
; Default: 80
warn-temperature = 80

; Whether or not to show units next to the temperature tokens (°C, °F)
; Default: true
units = true

; Available tags:
;   <label> (default)
;   <ramp>
format = %{T3}<ramp>%{T-}<label>
format-background = ${root.temperature-background}

; Available tags:
;   <label-warn> (default)
;   <ramp>
format-warn = %{T3}<ramp>%{T-}<label-warn>
format-warn-background = ${root.temperature-background}

; Available tokens:
;   %temperature% (deprecated)
;   %temperature-c%   (default, temperature in °C)
;   %temperature-f%   (temperature in °F)
label = %temperature-c%

; Available tokens:
;   %temperature% (deprecated)
;   %temperature-c%   (default, temperature in °C)
;   %temperature-f%   (temperature in °F)
label-warn = %temperature-c%
label-warn-foreground = #DB2D20

; Requires the <ramp> tag
; The icon selection will range from `base-temperature` to `warn-temperature`,
; temperatures above `warn-temperature` will use the last icon
; and temperatures below `base-temperature` will use `ramp-0`
ramp-0 = " "
ramp-1 = " "
ramp-2 = " "

	#### WINDOW NAME ####
[module/xwindow]
type = internal/xwindow
; Available tags:
;   <label> (default)
format = <label>
format-background = ${root.wname-background}
format-foreground = ${colours.foreground}
format-padding = 0

; Available tokens:
;   %title%
; Default: %title%
label = %title%
label-maxlen = 100

############### USER DEFINED MODULES ###############
[module/1sep]
type = custom/text
content = " "

content-background = ${colours.5colour}
content-foreground = ${colours.6colour}
content-font = 2

[module/2sep]
inherit = module/1sep
content-background = ${colours.4colour}
content-foreground = ${colours.5colour}

[module/3sep]
inherit = module/1sep
content-background = ${colours.3colour}
content-foreground = ${colours.4colour}

[module/4sep]
inherit = module/1sep
content-background = ${colours.2colour}
content-foreground = ${colours.3colour}

[module/5sep]
inherit = module/1sep
content-background = ${colours.1colour}
content-foreground = ${colours.2colour}

[module/6sep]
inherit = module/1sep
content-background = ${colours.background}
content-foreground = ${colours.1colour}

[module/7sep]
inherit = module/1sep
content-background = ${colours.greycolour}
content-foreground = ${colours.background}

[module/8sep]
inherit = module/1sep
content-foreground = ${colours.greycolour}
content-background = ${colours.background}

[module/startmenu]
type = custom/text
content = "  "

content-background = ${root.wname-background}
content-foreground = ${colours.2colour}
;content-foreground = #DB2D20
content-font = 3

; "click-(left|middle|right)" will be executed using "/bin/sh -c $COMMAND"
click-left = rofi -show drun
click-middle = rofi -show drun
click-right = rofi -show drun
